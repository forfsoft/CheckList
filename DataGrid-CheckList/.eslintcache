[{"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Scenes/IndexScene.js":"1","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Scenes/DataGirdSheet.js":"2","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/App.js":"3","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Actions/Scene.js":"4","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridEditor.js":"5","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Reducers/gridData.js":"6","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Reducers/index.js":"7","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Reducers/scene.js":"8","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/reportWebVitals.js":"9","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridEditorSample.js":"10","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridSampleData.js":"11","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridTreeEditor.js":"12","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridTreeData.js":"13"},{"size":816,"mtime":1608939920032,"results":"14","hashOfConfig":"15"},{"size":900,"mtime":1609033325599,"results":"16","hashOfConfig":"15"},{"size":211,"mtime":1608939284807,"results":"17","hashOfConfig":"15"},{"size":158,"mtime":1608857305588,"results":"18","hashOfConfig":"15"},{"size":6261,"mtime":1609043013328,"results":"19","hashOfConfig":"15"},{"size":908,"mtime":1608940309581,"results":"20","hashOfConfig":"15"},{"size":229,"mtime":1608940322561,"results":"21","hashOfConfig":"15"},{"size":523,"mtime":1608892541808,"results":"22","hashOfConfig":"15"},{"size":362,"mtime":1608938607069,"results":"23","hashOfConfig":"15"},{"size":7129,"mtime":1609026929712,"results":"24","hashOfConfig":"15"},{"size":9050,"mtime":1609028525276,"results":"25","hashOfConfig":"15"},{"size":11002,"mtime":1609050750417,"results":"26","hashOfConfig":"15"},{"size":9778,"mtime":1609047208256,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zy3q05",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Scenes/IndexScene.js",[],["61","62"],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Scenes/DataGirdSheet.js",["63"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SetScene } from '../Actions/Scene';\nimport DataGridEditor from '../Components/Organisms/DataGridEditor'\nimport DataGridTreeEditor from './../Components/Organisms/DataGridTreeEditor'\n\nclass DataGirdSheet extends Component {\n    componentDidMount() {\n        console.log('DataSheet component start');\n    }\n\n    render() {\n        return (\n            <div>\n                <DataGridTreeEditor />\n                {/* <DataGridEditor/> */}\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        current_scene: state.scene.current_scene\n    };\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onSetScene: (param1) => dispatch(SetScene(param1))\n    }\n}\nDataGirdSheet = connect(mapStateToProps, mapDispatchToProps)(DataGirdSheet);\nexport default DataGirdSheet;","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/App.js",["64"],"import logo from './logo.svg';\nimport './App.css';\nimport IndexScene from './Scenes/IndexScene'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IndexScene />\n    </div>\n  );\n}\n\nexport default App;\n",["65","66"],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Actions/Scene.js",[],["67","68"],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridEditor.js",["69"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SetGridColumnsData, SetGridRowsData, SetGridData } from './../../Actions/GridData'\nimport ReactDataGrid from \"react-data-grid\"\nimport { Toolbar, Data, Menu } from \"react-data-grid-addons\";\nimport './DataGridEditor.css'\nimport { GetColumnsData, GetRowsData } from \"./DataGridSampleData\"\n\nconst selectors = Data.Selectors;\nconst { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } = Menu;\n\nfunction ExampleContextMenu({\n    idx,\n    id,\n    rowIdx,\n    onRowDelete,\n    onRowInsertAbove,\n    onRowInsertBelow\n}) {\n    return (\n        <ContextMenu id={id}>\n            <MenuItem data={{ rowIdx, idx }} onClick={onRowDelete}>\n                Delete Row\n        </MenuItem>\n            <SubMenu title=\"Insert Row\">\n                <MenuItem data={{ rowIdx, idx }} onClick={onRowInsertAbove}>\n                    Above\n          </MenuItem>\n                <MenuItem data={{ rowIdx, idx }} onClick={onRowInsertBelow}>\n                    Below\n          </MenuItem>\n            </SubMenu>\n        </ContextMenu>\n    );\n}\n\n\nclass DataGridEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { filters: undefined };\n    }\n\n    componentDidMount() {\n        console.log('DataGridEditor component start');\n\n        this.props.onSetGridData(GetColumnsData(), GetRowsData());\n    }\n\n    onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n        const rows = this.props.gridRowsData.slice();\n        for (let i = fromRow; i <= toRow; i++) {\n            rows[i] = { ...rows[i], ...updated };\n        }\n        this.props.onSetGridRowsData(rows)\n    };\n\n    onFilterEventChange = (filter) => {\n        const newFilters = { ...this.state.filters };\n        if (filter.filterTerm) {\n            newFilters[filter.column.key] = filter;\n        } else {\n            delete newFilters[filter.column.key];\n        }\n        this.setState({ filters: newFilters })\n    }\n\n    onClearFilter = () => {\n        this.setState({ filters: undefined })\n    }\n\n    getRows = (rows, filters) => {\n        var result = selectors.getRows({ rows, filters });\n        return result\n    }\n\n    onSortRow = (sortColumn, sortDirection) => {\n        const comparer = (a, b) => {\n            if (sortDirection === \"ASC\") {\n                return a[sortColumn] > b[sortColumn] ? 1 : -1;\n            } else if (sortDirection === \"DESC\") {\n                return a[sortColumn] < b[sortColumn] ? 1 : -1;\n            }\n        };\n\n        if (sortDirection === \"NONE\") {\n            sortDirection = \"ASC\"\n            sortColumn = \"id\"\n        }\n\n        var newRowsData = [...this.props.gridRowsData].sort(comparer)\n        this.props.onSetGridRowsData(newRowsData)\n    }\n\n    EmptyRowsView = () => {\n        const message = \"No data\";\n        return (\n            <div\n                style={{ textAlign: \"center\", backgroundColor: \"#ddd\", padding: \"100px\" }}\n            >\n                <h3>{message}</h3>\n            </div>\n        );\n    };\n\n    deleteRow = rowIdx => {\n        // const nextRows = [...rows];\n        // nextRows.splice(rowIdx, 1);\n        // return nextRows;\n        //return this.props.gridRowsData;\n    };\n\n    insertRow = rowIdx => {\n        // const newRow = createFakeRow(\"-\");\n        // const nextRows = [...rows];\n        // nextRows.splice(rowIdx, 0, newRow);\n        // return nextRows;\n        //return this.props.gridRowsData;\n    };\n\n    // RowRenderer = ({ renderBaseRow, ...props }) => {\n    //     const color = props.idx % 2 ? \"green\" : \"blue\";\n    //     const newClass = props.idx % 2 ? \"CellTest\" : \"CellTest2\";\n    //     var row = props.row;\n    //     //row.id = \"3\"\n    //     // return <div style={{color}}>{renderBaseRow({...props, row})}</div>;\n    //     return <div className={newClass}>{renderBaseRow({ ...props, row })}</div>;\n    // };\n\n    // getCellActions = (column, row) => {\n    //     const cellActions = {\n    //         firstName: firstNameActions\n    //     };\n    //     return row.id % 2 === 0 ? cellActions[column.key] : null;\n    // }\n\n    render() {\n        if (this.props.gridColumnsData.length == 0) {\n            return (<div>none</div>);\n        }\n        const filteredRows = this.getRows(this.props.gridRowsData, this.state.filters)\n\n        return (\n            <div className=\"DataGridEditorRoot\">\n                <ReactDataGrid\n                    columns={this.props.gridColumnsData}\n                    rowGetter={i => filteredRows[i]}\n                    rowsCount={filteredRows.length}\n                    onGridRowsUpdated={this.onGridRowsUpdated}\n                    enableCellSelect={true}\n                    toolbar={<Toolbar enableFilter={true} />}\n                    onAddFilter={this.onFilterEventChange}\n                    onClearFilters={this.onClearFilter}\n                    onGridSort={this.onSortRow}\n                    emptyRowsView={this.EmptyRowsView}\n                    // rowRenderer={this.RowRenderer}\n                    contextMenu={\n                        <ExampleContextMenu\n                            onRowDelete={(e, { rowIdx }) => this.deleteRow(rowIdx)}\n                            onRowInsertAbove={(e, { rowIdx }) => this.insertRow(rowIdx)}\n                            onRowInsertBelow={(e, { rowIdx }) => this.insertRow(rowIdx + 1)}\n                        />\n                    }\n                    RowsContainer={ContextMenuTrigger}\n                //minHeight={500}\n                // onColumnResize={(idx, width) => console.log(`Column ${idx} has been resized to ${width}`) }\n                // onCellCopyPaste\n                />\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        gridColumnsData: state.gridData.gridColumnsData,\n        gridRowsData: state.gridData.gridRowsData\n    };\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onSetGridColumnsData: (param1) => dispatch(SetGridColumnsData(param1)),\n        onSetGridRowsData: (param1) => dispatch(SetGridRowsData(param1)),\n        onSetGridData: (param1, param2) => dispatch(SetGridData(param1, param2))\n    }\n}\nDataGridEditor = connect(mapStateToProps, mapDispatchToProps)(DataGridEditor);\nexport default DataGridEditor;","/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Reducers/gridData.js",[],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Reducers/index.js",[],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Reducers/scene.js",[],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/reportWebVitals.js",[],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridEditorSample.js",["70","71"],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridSampleData.js",[],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridTreeEditor.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"/Users/goli81/Desktop/MyWork/CheckList/datagrid-checklist/src/Components/Organisms/DataGridTreeData.js",["92"],"export function GetColumnsData() {\n    var columns = [\n        {\n            name: 'LargeCategory',\n            title: '대분류'\n        },\n        {\n            name: 'MediumCategory',\n            title: '중분류'\n        },\n        {\n            name: 'SmallCategory',\n            title: '소분류'\n        },\n        {\n            name: 'Desc',\n            title: '내용'\n        },\n        {\n            name: 'Complete',\n            title: '상태'\n        },\n        {\n            name: 'Owner',\n            title: '담당자'\n        }\n    ];\n\n    return columns;\n}\n\nexport function GetRowsData() {\n    var rows = [\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬2', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬2', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬2', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬2', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬3', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬3', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬3', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬3', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n        \n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스킬1', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        //\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯1', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯1', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯1', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯1', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯2', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯2', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯2', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '검사', SmallCategory: '스탯2', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n\n        //##################################################################################################################\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬2', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬2', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬2', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬2', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬3', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬3', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬3', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬3', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n        \n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스킬1', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        //\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯1', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯1', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯1', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯1', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯2', Desc: 'QA 목록 1', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯2', Desc: 'QA 목록 2', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯2', Desc: 'QA 목록 3', Owner: 'goli81', Complete: 'false', expand: true },\n        { LargeCategory: '밸런스', MediumCategory: '마법사', SmallCategory: '스탯2', Desc: 'QA 목록 4', Owner: 'goli81', Complete: 'false', expand: true },\n    ];\n\n    for (var i = 0; i < rows.length; i++) {\n        rows[i].id = i;\n        rows[i].parentId = null\n    }\n\n    let treeMap = new Map()\n    for (var i = 0; i < rows.length; i++) {\n        var key = rows[i].LargeCategory + \"/\" + rows[i].MediumCategory + \"/\" + rows[i].SmallCategory\n        var keyId = treeMap.get(key)\n        if (keyId === undefined) {\n            treeMap.set(key, rows[i].id)\n            \n        } else {\n            rows[i].parentId = keyId\n        }\n    }\n    return rows;\n}\n\nexport function GetColumnsResize() {\n    var columns = [\n        {\n            columnName: 'LargeCategory',\n            width: 100\n        },\n        {\n            columnName: 'MediumCategory',\n            width: 100\n        },\n        {\n            columnName: 'SmallCategory',\n            width: 100\n        },\n        {\n            columnName: 'Desc',\n            width: 200\n        },\n        {\n            columnName: 'Complete',\n            width: 100\n        },\n        {\n            columnName: 'Owner',\n            width: 100\n        }\n    ];\n\n    return columns;\n}",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":22},{"ruleId":"97","severity":1,"message":"101","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"93","replacedBy":"102"},{"ruleId":"95","replacedBy":"103"},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":138,"column":47,"nodeType":"108","messageId":"109","endLine":138,"endColumn":49},{"ruleId":"97","severity":1,"message":"110","line":167,"column":15,"nodeType":"99","messageId":"100","endLine":167,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":177,"column":47,"nodeType":"108","messageId":"109","endLine":177,"endColumn":49},{"ruleId":"97","severity":1,"message":"111","line":12,"column":10,"nodeType":"99","messageId":"100","endLine":12,"endColumn":20},{"ruleId":"97","severity":1,"message":"112","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":21},{"ruleId":"97","severity":1,"message":"113","line":15,"column":8,"nodeType":"99","messageId":"100","endLine":15,"endColumn":14},{"ruleId":"97","severity":1,"message":"114","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":16},{"ruleId":"97","severity":1,"message":"115","line":17,"column":8,"nodeType":"99","messageId":"100","endLine":17,"endColumn":18},{"ruleId":"97","severity":1,"message":"116","line":18,"column":8,"nodeType":"99","messageId":"100","endLine":18,"endColumn":15},{"ruleId":"97","severity":1,"message":"117","line":19,"column":8,"nodeType":"99","messageId":"100","endLine":19,"endColumn":16},{"ruleId":"97","severity":1,"message":"118","line":30,"column":5,"nodeType":"99","messageId":"100","endLine":30,"endColumn":18},{"ruleId":"97","severity":1,"message":"119","line":31,"column":5,"nodeType":"99","messageId":"100","endLine":31,"endColumn":19},{"ruleId":"97","severity":1,"message":"120","line":34,"column":5,"nodeType":"99","messageId":"100","endLine":34,"endColumn":11},{"ruleId":"97","severity":1,"message":"121","line":35,"column":5,"nodeType":"99","messageId":"100","endLine":35,"endColumn":13},{"ruleId":"97","severity":1,"message":"122","line":36,"column":5,"nodeType":"99","messageId":"100","endLine":36,"endColumn":24},{"ruleId":"97","severity":1,"message":"123","line":46,"column":5,"nodeType":"99","messageId":"100","endLine":46,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":75,"column":23,"nodeType":"108","messageId":"109","endLine":75,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":121,"column":22,"nodeType":"108","messageId":"109","endLine":121,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":137,"column":34,"nodeType":"108","messageId":"109","endLine":137,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":145,"column":33,"nodeType":"108","messageId":"109","endLine":145,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":158,"column":54,"nodeType":"108","messageId":"109","endLine":158,"endColumn":56},{"ruleId":"106","severity":1,"message":"107","line":167,"column":40,"nodeType":"108","messageId":"109","endLine":167,"endColumn":42},{"ruleId":"106","severity":1,"message":"107","line":181,"column":58,"nodeType":"108","messageId":"109","endLine":181,"endColumn":60},{"ruleId":"124","severity":1,"message":"125","line":105,"column":14,"nodeType":"99","messageId":"126","endLine":105,"endColumn":15},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'DataGridEditor' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.",["127"],["128"],["127"],["128"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'color' is assigned a value but never used.","'withStyles' is defined but never used.","'OutlinedInput' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Typography' is defined but never used.","'GridMUI' is defined but never used.","'Checkbox' is defined but never used.","'TreeDataState' is defined but never used.","'CustomTreeData' is defined but never used.","'Plugin' is defined but never used.","'Template' is defined but never used.","'TemplatePlaceholder' is defined but never used.","'TableTreeColumn' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]